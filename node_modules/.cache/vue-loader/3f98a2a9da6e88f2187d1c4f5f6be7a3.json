{"remainingRequest":"/Users/idel_isbaev/Desktop/tvuex/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/idel_isbaev/Desktop/tvuex/src/components/Buttons.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/idel_isbaev/Desktop/tvuex/src/components/Buttons.vue","mtime":1617003257707},{"path":"/Users/idel_isbaev/Desktop/tvuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/idel_isbaev/Desktop/tvuex/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/idel_isbaev/Desktop/tvuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/idel_isbaev/Desktop/tvuex/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapMutations, mapGetters} from 'vuex'\nimport filesystem from '../data/data'\nexport default {\n\tcomputed: mapGetters([\"getCurrentFolder\", \"getFilesystem\", \"getActiveTree\"]),\n\tmethods:{\n\t\t// ...mapMutations([\"deleteFolder\"]),\n\t\tcreateF(){\n\t\t\tif(this.getActiveTree == true){\n\t\t\t\tconsole.log(\"create folder in tree\")\n\t\t\t\tconsole.log(this.getCurrentFolder.children)\n\t\t\t\tthis.getCurrentFolder.children.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tname:this.newname,\n\t\t\t\t\t\tfolder:true,\n\t\t\t\t\t\tchildren:[]\n\t\t\t\t\t\t})\n\t\t\t}else{\n\t\t\t\tconsole.log(\"create file in content zone\")\n\t\t\t\tthis.getCurrentFolder.children.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: this.newname,\n\t\t\t\t\t\tfolder:false,\n\t\t\t\t\t\tchildren:[]\n\t\t\t\t\t\t})\n\t\t\t}\n\t\t\tthis.newname = \"\"\n\t\t},\n\n\n\n\n\t\t// deleteF(){\n\t\t// \tvar temp = this.getFilesystem\n\t\t// \tconsole.log(temp)\n\t\t// \tthis.recursDel(temp);\n\t\t// \tconsole.log(temp)\n\t\t// \t// this.deleteFolder(this.getCurrentFolder)\n\t\t// },\n\t\trecursDel(tempfiles){\n\t\t\tconsole.log(tempfiles)\n\t\t\tif(tempfiles.name == this.getCurrentFolder.name){\n\t\t\t\tconsole.log(\"done\")\n\t\t\t\ttempfiles = null\n\t\t\t}else{\n\t\t\t\tfor( var i = 0; i < tempfiles.children.length; i++){\n\t\t\t\t\tthis.recursDel(tempfiles.children[i])\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tdata() {\n\t\treturn{\n\t\t\tfiles: this.getFilesystem,\n\t\t\tnewname: \"\",\n\t\t\tshowInput: true\n\t\t}\n  },\n}\n",{"version":3,"sources":["Buttons.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Buttons.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<div class=\"btns\">\n      <button class=\"btn\" @click=\"showInput = !showInput\">NEW</button>\n      <button class=\"btn\">Delete</button>\n\t  <div :class=\"{inputName: showInput}\"> \n\t\t  <input  v-model=\"newname\" \n\t\t  \tplaceholder=\"type name for folder/file\" \n\t\t\t@keyup.enter=\"showInput = !showInput; createF()\"/> \n\t</div>\n\t \n    </div>\n</template>\n\n\n<script>\nimport {mapMutations, mapGetters} from 'vuex'\nimport filesystem from '../data/data'\nexport default {\n\tcomputed: mapGetters([\"getCurrentFolder\", \"getFilesystem\", \"getActiveTree\"]),\n\tmethods:{\n\t\t// ...mapMutations([\"deleteFolder\"]),\n\t\tcreateF(){\n\t\t\tif(this.getActiveTree == true){\n\t\t\t\tconsole.log(\"create folder in tree\")\n\t\t\t\tconsole.log(this.getCurrentFolder.children)\n\t\t\t\tthis.getCurrentFolder.children.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tname:this.newname,\n\t\t\t\t\t\tfolder:true,\n\t\t\t\t\t\tchildren:[]\n\t\t\t\t\t\t})\n\t\t\t}else{\n\t\t\t\tconsole.log(\"create file in content zone\")\n\t\t\t\tthis.getCurrentFolder.children.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: this.newname,\n\t\t\t\t\t\tfolder:false,\n\t\t\t\t\t\tchildren:[]\n\t\t\t\t\t\t})\n\t\t\t}\n\t\t\tthis.newname = \"\"\n\t\t},\n\n\n\n\n\t\t// deleteF(){\n\t\t// \tvar temp = this.getFilesystem\n\t\t// \tconsole.log(temp)\n\t\t// \tthis.recursDel(temp);\n\t\t// \tconsole.log(temp)\n\t\t// \t// this.deleteFolder(this.getCurrentFolder)\n\t\t// },\n\t\trecursDel(tempfiles){\n\t\t\tconsole.log(tempfiles)\n\t\t\tif(tempfiles.name == this.getCurrentFolder.name){\n\t\t\t\tconsole.log(\"done\")\n\t\t\t\ttempfiles = null\n\t\t\t}else{\n\t\t\t\tfor( var i = 0; i < tempfiles.children.length; i++){\n\t\t\t\t\tthis.recursDel(tempfiles.children[i])\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tdata() {\n\t\treturn{\n\t\t\tfiles: this.getFilesystem,\n\t\t\tnewname: \"\",\n\t\t\tshowInput: true\n\t\t}\n  },\n}\n</script>\n<style scoped>\n.btns{\n  text-align: center;\n}\n.btn{\n  padding: 5px;\n  width: 100px;\n  margin: 10px;\n}\n.inputName{\n\tdisplay: none;\n}\n</style>"]}]}